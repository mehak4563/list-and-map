/////////////////////////question no 1//////////////
void main() {
  List<String> names = ["mehak", "ali", "sara", "ayesh", "amna"];
  String allNames = names.join('\n');
  print(allNames);
}
///////////////////////question 2///////////////////////
void main() {
  List<String> days = [];
  
  days.add("Sunday");
  days.add("Monday");
  days.add("Tuesday");
  days.add("Wednesday");
  days.add("Thursday");
  days.add("Friday");
  days.add("Saturday");
  
  String allDays = days.join('\n');
  print(allDays);
}
//////////////////question 3////////////////////////
void main() {
  List<String> days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

  while (days.isNotEmpty) {
    String removedDay = days.removeLast();
    print("Removed day: $removedDay");
  }
}
///////////////////////question 4.///////////////
void main() {
  List<int> numbers = [5, 8, 2, 10, 3, 1, 9, 6, 4, 7];

  int smallestNumber = numbers.reduce((a, b) => a < b ? a : b);
  int greatestNumber = numbers.reduce((a, b) => a > b ? a : b);

  print("Smallest number: $smallestNumber");
  print("Greatest number: $greatestNumber");
}
//////////ques 5
void main() {
  List<int> numbers = [5, 8, 2, 10, 3, 1, 9, 6, 4, 7];

  int smallestNumber = numbers.reduce((a, b) => a < b ? a : b);
  int greatestNumber = numbers.reduce((a, b) => a > b ? a : b);

  print("Smallest number: $smallestNumber");
  print("Greatest number: $greatestNumber");
}
//////////question 5///////////////////

void main() {
  Map<String, String> contactMap = {
    "mehal": "1234567890",
    "ali": "9876543210",
    "anum": "4567890123",
    "Sarah": "7890123456",
    "shaikh": "2345678901",
  };

  List<String> keysWithLength4 = [];

  contactMap.forEach((key, value) {
    if (key.length == 4) {
      keysWithLength4.add(key);
    }
  });

  print("Keys with length 4: $keysWithLength4");
}
//////////////question 6////////////////

void main() {
  Map<String, Map<String, dynamic>> world = {
    "countries": {
      "USA": {
        "capitalCity": "Washington, D.C.",
        "currency": "US Dollar",
        "language": "English"
      },
      "France": {
        "capitalCity": "Paris",
        "currency": "Euro",
        "language": "French"
      },
      "Japan": {
        "capitalCity": "Tokyo",
        "currency": "Japanese Yen",
        "language": "Japanese"
      }
    }
  };

  String selectedCountry = "France";
  Map<String, dynamic> countryInfo = world["countries"][selectedCountry];

  String capitalCity = countryInfo["capitalCity"];
  String currency = countryInfo["currency"];

  print("Country: $selectedCountry");
  print("Capital City: $capitalCity");
  print("Currency: $currency");
}
////////////////question 7////////
void main() {
  Map<String, double> expenses = {
    'sun': 3000.0,
    'mon': 3000.0,
    'tue': 3234.0,
  };

  if (expenses.containsKey('fri')) {
    expenses['fri'] = 5000.0;
  } else {
    expenses['fri'] = 5000.0;
  }

  print(expenses);
}
/////////////////question 8
void main() {
  List<Map<String, bool>> usersEligibility = [
    {'name': 'John', 'eligible': true},
    {'name': 'Alice', 'eligible': false},
    {'name': 'Mike', 'eligible': true},
    {'name': 'Sarah', 'eligible': true},
    {'name': 'Tom', 'eligible': false},
  ];

  usersEligibility.retainWhere((user) => user['eligible'] == true);

  print(usersEligibility);
 }
/////////////ques 9
void main() {
  List<int> numbers = [10, 5, 8, 3, 12, 6];

  int maxValue = numbers.reduce((currentMax, element) => currentMax > element ? currentMax : element);

  print("Maximum value: $maxValue");
}
///////////////ques 10
void main() {
  List<String> originalList = ['apple', 'orange', 'banana', 'apple', 'grape', 'banana'];

  List<String> newList = originalList.toSet().toList();

  print("Original List: $originalList");
  print("New List without duplicates: $newList");
}
/////////////////////ques 11
void main() {
  List<int> originalList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
  int n = 5;

  List<int> newList = originalList.take(n).toList();

  print("Original List: $originalList");
  print("New List (First $n elements): $newList");
}
//////////////ques 12
void main() {
  List<String> originalList = ['apple', 'orange', 'banana', 'grape'];

  List<String> reversedList = List.from(originalList.reversed);

  print("Original List: $originalList");
  print("Reversed List: $reversedList");
}
///////////////ques 13
void main() {
  List<int> originalList = [1, 2, 3, 2, 4, 5, 1, 6, 3];

  List<int> uniqueList = originalList.toSet().toList();

  print("Original List: $originalList");
  print("Unique List: $uniqueList");
}
//////////ques 14
void main() {
  List<int> originalList = [5, 2, 8, 1, 4, 3];

  List<int> sortedList = List.from(originalList)..sort();

  print("Original List: $originalList");
  print("Sorted List (Ascending): $sortedList");
}

/////////////ques 15
void main() {
  List<int> originalList = [5, -2, 8, -1, 4, -3];

  List<int> positiveNumbers = originalList.where((number) => number > 0).toList();

  print("Original List: $originalList");
  print("Positive Numbers: $positiveNumbers");
}
///////////ques 16
void main() {
  List<int> originalList = [5, 2, 8, 7, 4, 3];

  List<int> evenNumbers = originalList.where((number) => number % 2 == 0).toList();

  print("Original List: $originalList");
  print("Even Numbers: $evenNumbers");
}
///////////ques 17
void main() {
  List<int> originalList = [1, 2, 3, 4, 5];

  List<int> squaredList = originalList.map((number) => number * number).toList();

  print("Original List: $originalList");
  print("Squared List: $squaredList");
}
///////////ques 18

void main() {
  Map<String, dynamic> person = {
    'name': 'John',
    'age': 25,
    'isStudent': true,
  };

  bool isStudent = person['isStudent'];
  int age = person['age'];

  if (isStudent && age > 18) {
    print("Eligible");
  } else {
    print("Not eligible");
  }
}
///////////ques 19
void main() {
  Map<String, dynamic> product = {
    'name': 'Product A',
    'price': 10.99,
    'quantity': 5,
  };

  int quantity = product['quantity'];

  if (quantity > 0) {
    print("In stock");
  } else {
    print("Out of stock");
  }
}
///////////ques 20
void main() {
  Map<String, dynamic> car = {
    'brand': 'Toyota',
    'color': 'Red',
    'isSedan': true,
  };

  bool isSedan = car['isSedan'];
  String color = car['color'];

  if (isSedan && color == 'Red') {
    print("Match");
  } else {
    print("No match");
  }
}
/////////ques 21
void main() {
  Map<String, dynamic> user = {
    'name': 'mehak',
    'isAdmin': true,
    'isActive': true,
  };

  bool isAdmin = user['isAdmin'];
  bool isActive = user['isActive'];

  if (isAdmin && isActive) {
    print("Active admin");
  } else {
    print("Not an active admin");
  }
}
/////////ques 22
void main() {
  Map<String, int> shoppingCart = {
    'Apple': 3,
    'Banana': 2,
    'Orange': 1,
  };

  if (shoppingCart.containsKey('Apple')) {
    print("Product found");
  } else {
    print("Product not found");
  }
}





















































